<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>onboardingsix</artifactId>
        <groupId>com.ericsson.ci.test</groupId>
        <version>1.18.36-SNAPSHOT</version>
    </parent>
    <artifactId>ERICnrnsasystemstopology2_CXP9041362</artifactId>
    <packaging>${rpm.packaging}</packaging>
    <name>[${project.parent.artifactId}] CXP module for RHEL 7</name>
    <properties>
        <publish_artifact>true</publish_artifact>
        <media.category>scripting</media.category>
        <com.ericsson.oss.rpm.architecture>noarch</com.ericsson.oss.rpm.architecture>
        <!-- Install path = /${rpm-root}/${comp-name}/${install-path} -->
        <rpm-root>/opt</rpm-root>
        <comp-name>ericsson</comp-name>
        <version.archetype>1.0.56</version.archetype>
        <install-path>com.ericsson.oss.ci-archetypes</install-path>
        <install-path>com.ericsson.oss.services.nr-nsa-systems-topology</install-path>
        <scripting_group>scripting_users</scripting_group>
        <scripting_gid>5003</scripting_gid>
        <nfs_nrnsa>/ericsson/tor/no_rollback/nr-nsa-systems-topology</nfs_nrnsa>
    </properties>
    <profiles>
        <profile>
            <id>container_build</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <version>${exec.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>Execute build in container</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>../build_in_container.sh</executable>
                                    <arguments>
                                        <argument>rhel7</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <configuration>
                                    <executable>behave</executable>
                                    <workingDirectory>${project.parent.basedir}/test</workingDirectory>
                                </configuration>
                                <id>BehaveIntegrationTest</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                            <execution>
                                <configuration>
                                    <executable>nosetests</executable>
                                    <environmentVariables>
                                        <PYTHONPATH>
                                            ${project.parent.basedir}/src:${project.parent.basedir}/common:${project.parent.basedir}/topologies:${project.parent.basedir}/system_collections:${env.PYTHONPATH}:${project.build.directory}/deps
                                        </PYTHONPATH>
                                    </environmentVariables>
                                    <workingDirectory>${project.parent.basedir}/test</workingDirectory>
                                    <arguments>
                                        <argument>--failure-detail</argument>
                                        <argument>--with-xunit</argument>
                                        <argument>-s</argument>
                                        <argument>--exe</argument>
                                        <argument>--verbose</argument>
                                        <argument>--with-coverage</argument>
                                        <argument>--cover-package=${project.parent.basedir}/src</argument>
                                        <argument>--cover-inclusive</argument>
                                        <argument>--cover-xml</argument>
                                        <argument>${project.parent.basedir}/test/</argument>
                                    </arguments>
                                </configuration>
                                <id>nosetests</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>local_build</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- to deploy rpm -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>ERICnrnsasystemstopology2_CXP9041362</id>
                                <phase>deploy</phase>
                                <configuration>
                                    <type>${project.packaging}</type>
                                    <generatePom>true</generatePom>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<executions>
							<execution>
								<id>Generate symbolic to ${common-name}</id>
								<phase>clean</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>../prepare_symbolic_links.sh</executable>
									<arguments>
										<argument>rhel7</argument>
										<argument>${basedir}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>Remove symbolic link for ${common-name}</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>/bin/rm</executable>
									<arguments>
										<argument>-rf</argument>
										<argument>${basedir}/src</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
                    <!-- outputs the file into the ../build/rpms folder, required if we want to copy it over to another build -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.10</version>
						<executions>
							<execution>
								<id>copy</id>
								<phase>package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.artifactId}</artifactId>
											<version>${project.version}</version>
											<type>rpm</type>
											<overWrite>true</overWrite>
											<outputDirectory>../build/rpms</outputDirectory>
											<destFileName>${project.artifactId}.rpm</destFileName>
										</artifactItem>
									</artifactItems>
									<outputDirectory>${project.build.directory}/target</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
						</executions>
					</plugin>
                    <!-- suppress various LITP specific build steps -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.ericsson.oss.presentation.client.scripting</groupId>
                                            <artifactId>ERICclientscripting_CXP9031854</artifactId>
                                            <version>1.15.1</version>
                                            <type>rpm</type>
                                            <outputDirectory>${project.build.directory}/deps</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <!-- Copy and filter preinstall.sh script in order to
                pass scripting_group and scripting_id from maven -->
                            <execution>
                                <id>copy-scripts</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/scripts</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.parent.basedir}/scripts</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>preinstall.sh</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/scripts/jboss/pre-start</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>configure_nfs_mounts_nrnsasystemstopology.sh</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <configuration>
                                    <executable>pylint</executable>
                                    <environmentVariables>
                                        <PYTHONPATH>
                                            ${project.parent.basedir}/src:${project.build.directory}/deps:${env.PYTHONPATH}
                                        </PYTHONPATH>
                                    </environmentVariables>
                                    <workingDirectory>.</workingDirectory>
                                    <arguments>
                                        <argument>
                                            --msg-template='{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}'
                                        </argument>
                                        <argument>-rn</argument>
                                        <argument>
                                            -dR0903,C0111,E1103,R0921,R0922,W0403,E0602,I0011,W0611,W0611
                                        </argument>
                                        <argument>${project.parent.basedir}/src</argument>
                                    </arguments>
                                </configuration>
                                <id>pylint</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                            <execution>
                                <configuration>
                                    <executable>pep8</executable>
                                    <workingDirectory>.</workingDirectory>
                                    <arguments>
                                        <argument>${project.parent.basedir}/src</argument>
                                    </arguments>
                                </configuration>
                                <id>pep8</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                            <execution>
                                <!--  unpack dependencies in target  -->
                                <configuration>
                                    <executable>sh</executable>
                                    <workingDirectory>.</workingDirectory>
                                    <arguments>
                                        <argument>./expand_deps_rpms.sh</argument>
                                    </arguments>
                                </configuration>
                                <id>unpack-scripting-rpm</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                            <execution>
                                <!--  unpack dependencies in target  -->
                                <configuration>
                                    <executable>unzip</executable>
                                    <workingDirectory>..</workingDirectory>
                                    <arguments>
                                        <argument>-o</argument>
                                        <argument>-q</argument>
                                        <argument>-d</argument>
                                        <argument>${project.build.directory}/deps</argument>
                                        <argument>${project.build.directory}/deps/opt/ericsson/ERICclientscripting_CXP9031854/enm_client_scripting-*.whl</argument>
                                    </arguments>
                                </configuration>
                                <id>unpack-scripting-wheel</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <defineStatements>
                                <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                            </defineStatements>
                            <requires>
                                <require>python &gt;= 2.6</require>
                                <require>python-cryptography</require>
                                <require>expect</require>
                            </requires>
                            <provides>
                                <provide>nr-nsa-systems-topology = 1.0.1</provide>
                            </provides>
                            <mappings>
                                <mapping>
                                    <directory>${rpm-root}/${comp-name}/nr-nsa-systems-topology</directory>
                                    <groupname>${scripting_group}</groupname>
                                    <configuration>false</configuration>
                                    <sources>
                                        <source>
                                            <location>${project.parent.basedir}/src</location>
                                            <includes>
                                                <include>**/*.py</include>
                                                <include>**/*.txt</include>
                                                <include>**/*.json</include>
                                                <include>log/nrnsa_log</include>
                                            </includes>
                                            <excludes>
                                                <exclude>**/*.pyc</exclude>
                                                <exclude>**/*.pyo</exclude>
                                                <exclude>delete_nodes.py</exclude>
                                                <exclude>populate.py</exclude>
                                                <exclude>viewjsonlines.py</exclude>
                                                <exclude>test</exclude>
                                                <!--Instead, Use RHEL7 cryptography implementation of crypt.py-->
                                                <exclude>/lib/crypt.py</exclude>
                                            </excludes>
                                        </source>
                                        <source>
                                            <location>${project.parent.basedir}/ERICnrnsasystemstopology2_CXP9041362/src</location>
                                            <includes>
                                                <include>lib/crypt.py</include>
                                            </includes>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/etc</directory>
                                    <groupname>${scripting_group}</groupname>
                                    <configuration>false</configuration>
                                    <sources>
                                        <source>
                                            <location>${project.parent.basedir}/etc</location>
                                            <excludes>
                                                <exclude>**/*.pyc</exclude>
                                            </excludes>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>${rpm-root}/${comp-name}/nr-nsa-systems-topology/crontabs</directory>
                                    <groupname>${scripting_group}</groupname>
                                    <filemode>0754</filemode>
                                    <configuration>false</configuration>
                                    <sources>
                                        <source>
                                            <location>${project.parent.basedir}/crontabs</location>
                                            <includes>
                                                <include>cron.sh</include>
                                            </includes>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>${rpm-root}/${comp-name}/nr-nsa-systems-topology/bin</directory>
                                    <groupname>${scripting_group}</groupname>
                                    <filemode>0754</filemode>
                                    <configuration>false</configuration>
                                    <sources>
                                        <source>
                                            <location>${project.parent.basedir}/bin</location>
                                            <includes>
                                                <include>**/*</include>
                                            </includes>
                                            <excludes>
                                                <exclude>**/*.pyc</exclude>
                                            </excludes>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>${rpm-root}/${comp-name}/nr-nsa-systems-topology/crontabs</directory>
                                    <groupname>${scripting_group}</groupname>
                                    <configuration>false</configuration>
                                    <sources>
                                        <source>
                                            <location>${project.parent.basedir}/crontabs</location>
                                            <includes>
                                                <include>cronfile</include>
                                                <include>script_functions.sh</include>
                                            </includes>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>${vm.jboss-install-path}/bin/pre-start</directory>
                                    <filemode>754</filemode>
                                    <username>${jboss-username}</username>
                                    <groupname>${jboss-groupname}</groupname>
                                    <configuration>false</configuration>
                                    <directoryIncluded>false</directoryIncluded>
                                    <recurseDirectories>false</recurseDirectories>
                                    <sources>
                                        <source>
                                            <location>${project.build.directory}/scripts</location>
                                            <includes>
                                                <include>configure_nfs_mounts_nrnsasystemstopology.sh</include>
                                            </includes>
                                        </source>
                                    </sources>
                                </mapping>
                            </mappings>
                            <preinstallScriptlet>
                                <scriptFile>${project.build.directory}/scripts/preinstall.sh</scriptFile>
                                <fileEncoding>utf-8</fileEncoding>
                            </preinstallScriptlet>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>com.ericsson.oss.presentation.client.scripting</groupId>
            <artifactId>ERICclientscripting_CXP9031854</artifactId>
            <version>1.15.1</version>
            <type>rpm</type>
        </dependency>
    </dependencies>
</project>
